startpositiongsm2 <- read.csv("Desktop/startpositiongsm2.csv", sep = ",", header = F)
startpositiongsm2[1,1]
startpositiongsm2[1,2]
startpositiongsm2[2,2]
startpositiongsm2[2,]
head(startpositiongsm2,5)
startpositiongsm2<-t(startpositiongsm2)
View(startpositiongsm2)
View(startpositiongsm2)
startpositiongsm1 <- read.csv("Desktop/startpositiongsm1.csv", header = F)
endpositiongsm2 <- read.csv("Desktop/endpositiongsm2.csv", header = F)
endpositiongsm1 <- read.csv("Desktop/endpositiongsm1.csv", header = F)
vplotGSM1 <- read.csv("Desktop/vplotGSM1.csv", header = F)
vplotGSM2<- read.csv("Desktop/vplotGSM2.csv", header = F)
vplotGSM1<-t(vplotGSM1)
vplotGSM2<-t(vplotGSM2)
startpositiongsm1<-t(startpositiongsm1)
endpositiongsm1<-t(endpositiongsm1)
endpositiongsm2<-t(endpositiongsm2)
Sample<-0
Sample[0:185695]<-Low Digestion
Sample[0:185695]<-"Low Digestion"
Sample[185695:431002]<-"High Digestion"
DT = data.table(
Sample = Sample,
endposition1 = 0:431002,
startposition1 = 0:431002,
)
library(data.table)
DT = data.table(
Sample = Sample,
endposition1 = 0:431002,
startposition1 = 0:431002,
)
DT = data.table(
Sample = c(Samples1),
endposition1 = 0:431002,
startposition1 = 0:431002,
)
DT = data.table(
Sample = c(Samples),
endposition1 = 0:431002,
startposition1 = 0:431002,
)
DT = data.table(
Sample = c(Sample),
endposition1 = 0:431002,
startposition1 = 0:431002,
)
DT = data.table(
Sample = c(Sample),
endposition1 = 0:431002,
startposition1 = 0:431002
)
View(DT)
DT[2,185696]
DT[185696,2]
DT[185696,1]
DT[1:185695,2]<-endpositiongsm1
DT[185696:431002,2]<-endpositiongsm2
DT[185696:431002,3]<-startpositiongsm2
DT[1:185695,2]<-startpositiongsm1
View(DT)
View(DT)
DT[1:185695,2]<-endpositiongsm1
DT[1:185695,3]<-startpositiongsm1
DT$Read Midpoint<-mean(DT$endposition1,DT$startposition1)
DT$ReadMidpoint<-mean(DT$endposition1,DT$startposition1)
DT<-DT[1:431001,1:3]
DT$mean <- rowMeans(DT[c('endpostion1', 'startposition1')], na.rm=TRUE)
DT$Sample<-NULL
DT$midpoint <- rowMeans(DT)
DT2 = data.table(
Sample = Sample,
Read Midpoint = DT$midpoint,
Read Position = 1:431001 ,
)
DT2 = data.table(
Sample = c(Sample),
endposition1 = 0:431002,
startposition1 = 0:431002
)
DT$Sample<-Sample
View(DT)
DT$ReadPosition<-1:431001
View(DT)
DT$ReadPosition[1:185695]<-vplotGSM1
DT$ReadPosition[185696:]<-vplotGSM2
DT$ReadPosition[185696:431001]<-vplotGSM2
DT$ReadPosition[185695:431001]<-vplotGSM2
DT$\
DT$startposition1<-NULL
DT$endposition1<-NULL
View(DT)
ggplot(DT, aes(x=`Read Midpoint`, y=`Read Length`, colour=Sample))+ geom_point(size = .01)+ ylim(0,300)
library(ggplot2)
ggplot(DT, aes(x=`Read Midpoint`, y=`Read Length`, colour=Sample))+ geom_point(size = .01)+ ylim(0,300)
ggplot(DT, aes(x=`Midpoint`, y=`Readposition`, colour=Sample))+ geom_point(size = .01)+ ylim(0,300)
ggplot(DT, aes(x=`midpoint`, y=`Readposition`, colour=Sample))+ geom_point(size = .01)+ ylim(0,300)
ggplot(DT, aes(x=`midpoint`, y=`ReadPosition`, colour=Sample))+ geom_point(size = .01)+ ylim(0,300)
ggplot(DT, aes(x=`midpoint`, y=`ReadPosition`, colour=Sample))+ geom_point(size = .001)+ ylim(0,300)
View(endpositiongsm2)
DT$ReadPosition<-abs(DT$ReadPosition)
ggplot(DT, aes(x=`midpoint`, y=`ReadPosition`, colour=Sample))+ geom_point(size = .01)+ ylim(0,300)
ggplot(DT, aes(x=`midpoint`, y=`ReadPosition`, colour=Sample))+ geom_point(size = .01)+ ylim(0,300)+ xlim(43400,440000)
ggplot(DT, aes(x=`midpoint`, y=`ReadPosition`, colour=Sample))+ geom_point(size = .01)+ ylim(0,300)+ xlim(434000,440000)
install.packages("rattle")
library("rattle", lib.loc="~/Library/R/3.4/library")
rattle:drug
rattle(drug_delivery_data_compiled)
install.packages("RGtk2")
RGtk2
install.packages("ratt")
install.packages("rattle")
library(readxl)
Drug_Delivery_Data_Compiled <- read_excel("Downloads/Drug Delivery Data Compiled.xlsx")
View(Drug_Delivery_Data_Compiled)
rattle(Drug_Delivery_Data_Compiled)
remove.packages("rattle", lib="~/Library/R/3.4/library")
install.packages("rattle")
rattle.print.summary.multinom(Drug_Delivery_Data_Compiled)
summary(Drug_Delivery_Data_Compiled)
plot(Drug_Delivery_Data_Compiled)
install.packages("BiocManager")
library("BiocManager", lib.loc="~/Library/R/3.4/library")
BiocManager::install(Drug_Delivery_Data_Compiled)
install.packages("rattle")
install.packages("rattle")
library(rattle)
rattle(Drug_Delivery_Data_Compiled)
package_version(rattle(3.2))
summary(Drug_Delivery_Data_Compiled)
remove.packages("rattle", lib="~/Library/R/3.4/library")
install.packages("rattle")
rattle(Drug_Delivery_Data_Compiled)
install.packages("https://togaware.com/access/rattle_5.0.14.tar.gz", repos=NULL, type="source")
rattle(Drug_Delivery_Data_Compiled)
install.packages("RGtk2")
library(RGtk2)
install.packages("rattle")
rattleInfo(Drug_Delivery_Data_Compiled)
library("rattle", lib.loc="~/Library/R/3.4/library")
rattle::generateAprioriSummary(drug_delivery_data_compiled)
library(rattle)
rattle(drug_delivery_data_compiled)
install.packages("Xquartz")
remove.packages("rattle", lib="~/Library/R/3.4/library")
system('brew install gtk+')
local({
if (Sys.info()[['sysname']] != 'Darwin') return()
.Platform$pkgType = 'mac.binary.el-capitan'
unlockBinding('.Platform', baseenv())
assign('.Platform', .Platform, 'package:base')
lockBinding('.Platform', baseenv())
options(
pkgType = 'both', install.packages.compile.from.source = 'always',
repos = 'https://macos.rbind.org'
)
})
install.packages(c('RGtk2', 'cairoDevice', 'rattle'))
install.packages(c("RGtk2", "cairoDevice", "rattle"))
update(version)
update.default(version'10.2')
R.version.string
install.packages("rattle")
summary(drug_delivery_data_compiled)
library(readxl)
Drug_Delivery_Data_Compiled <- read_excel("Downloads/Drug Delivery Data Compiled.xlsx")
View(Drug_Delivery_Data_Compiled)
summary(Drug_Delivery_Data_Compiled)
library(tidyverse)
library(tidyverse_1.3.0.tar.gz)
library(tidyverse
?tidyverse
tidyverse
.libPaths()
library(tidyverse)
library(tidyr)
pivot_longer()
Che_scatter <- splom(log2_splom_data[c(9,10,11,12,13,14,15,16)],
par.settings=simpleTheme(col="red", pch = "point"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RColorBrewer)
library(lattice)
setwd("/Users/Caronelab/Desktop/Spicy_Pepper_Project/R_Workflow")
#setwd()
genes_fpkm <- read.csv ("genes_fpkm.csv") #Reading in FPKM Values
protein_data <- read.csv("Spicy_Pepper_cufflinks_information.csv") #Pepper information
splom_data <- read.csv("splom.csv")
tidy_fpkm <- genes_fpkm %>%
pivot_longer(cols = 4:51,
names_to = "Sample_ID",
values_to = "FPKM") #Shrink dataframe width by creating 'Sample ID' col
final_tidy <- tidy_fpkm %>%
full_join(protein_data,
by = "Sample_ID") %>%
rename(c(Locus = locus,
Gene_ID = genes_fpkm_with_protein_charact))
#Add pepper information to tidied dataset, rename cols to make working w data easier
trimmed_tidy <- final_tidy %>%
mutate(Sample_ID = str_sub(Sample_ID, 1, -5)) %>%
mutate(Forward = str_detect(Sample_ID, "R1")) %>%
mutate(Direction = case_when(Forward == TRUE ~ "Forward",
Forward == FALSE ~ "Reverse")) %>%
select(-Forward) %>%
mutate(Sample_ID = str_sub(Sample_ID,1, 5))
log2_splom_data <- log2(splom_data[c(4:51)])
Che_scatter <- splom(log2_splom_data[c(9,10,11,12,13,14,15,16)],
par.settings=simpleTheme(col="red", pch = "point"))
Hab_scatter <- splom(log2_splom_data[c(1,2,21,22,23,24,25,26)])
Jal_scatter <- splom(log2_splom_data[c(3,4,27,28)])
Ser_scatter <- splom(log2_splom_data[c(5,6,37,38,39,40,41,42)])
Gho_scatter <- splom(log2_splom_data[c(17,18,19,20)])
Wax_scatter <- splom(log2_splom_data[c(7,8,43,44,45,46,47,48)])
Cay_scatter <- splom(log2_splom_data[c(29,30,31,32,33,34,35,36)])
Che_scatter
log2_splom_data <- log2(splom_data[c(4:51)])
Che_scatter <- splom(log2_splom_data[c(9,10,11,12,13,14,15,16)],
par.settings = simpleTheme(col="red", pch = 20))
Hab_scatter <- splom(log2_splom_data[c(1,2,21,22,23,24,25,26)])
Jal_scatter <- splom(log2_splom_data[c(3,4,27,28)])
Ser_scatter <- splom(log2_splom_data[c(5,6,37,38,39,40,41,42)])
Gho_scatter <- splom(log2_splom_data[c(17,18,19,20)])
Wax_scatter <- splom(log2_splom_data[c(7,8,43,44,45,46,47,48)])
Cay_scatter <- splom(log2_splom_data[c(29,30,31,32,33,34,35,36)])
Che_scatter
Che_scatter <- splom(log2_splom_data[c(9,10,11,12,13,14,15,16)],
par.settings = simpleTheme(col="red"),
pch = 20)
log2_splom_data <- log2(splom_data[c(4:51)])
Che_scatter <- splom(log2_splom_data[c(9,10,11,12,13,14,15,16)],
par.settings = simpleTheme(col="red"),
pch = 20)
Hab_scatter <- splom(log2_splom_data[c(1,2,21,22,23,24,25,26)])
Jal_scatter <- splom(log2_splom_data[c(3,4,27,28)])
Ser_scatter <- splom(log2_splom_data[c(5,6,37,38,39,40,41,42)])
Gho_scatter <- splom(log2_splom_data[c(17,18,19,20)])
Wax_scatter <- splom(log2_splom_data[c(7,8,43,44,45,46,47,48)])
Cay_scatter <- splom(log2_splom_data[c(29,30,31,32,33,34,35,36)])
Che_scatter
log2_splom_data <- log2(splom_data[c(4:51)])
Che_scatter <- splom(log2_splom_data[c(9,10,11,12,13,14,15,16)],
par.settings = simpleTheme(col="red"),
pch = 20)
Hab_scatter <- splom(log2_splom_data[c(1,2,21,22,23,24,25,26)])
Jal_scatter <- splom(log2_splom_data[c(3,4,27,28)])
Ser_scatter <- splom(log2_splom_data[c(5,6,37,38,39,40,41,42)])
Gho_scatter <- splom(log2_splom_data[c(17,18,19,20)])
Wax_scatter <- splom(log2_splom_data[c(7,8,43,44,45,46,47,48)])
Cay_scatter <- splom(log2_splom_data[c(29,30,31,32,33,34,35,36)])
Che_scatter
head(pepper_pca$rotation)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RColorBrewer)
library(lattice)
library(patchwork)
library(corrplot)
#setwd("/Users/Caronelab/Desktop/Spicy_Pepper_Project/R_Workflow")
setwd("/Users/nickpaterna/Repositories/Spicy_Pepper_Project/R_Workflow")
# Chunk 2: Loading in Data
genes_fpkm <- read.csv ("genes_fpkm.csv") #Reading in FPKM Values
protein_data <- read.csv("Spicy_Pepper_cufflinks_information.csv") #Pepper info
splom_data <- read.csv("splom.csv") #Formatted for splom
splom_mod <- read.csv("splom_mod.csv") #Adjusted -Inf to 1
# Chunk 3: Tidying the Data
tidy_fpkm <- genes_fpkm %>%
pivot_longer(cols = 4:51,
names_to = "Sample_ID",
values_to = "FPKM") #Shrink dataframe width by creating 'Sample ID' col
final_tidy <- tidy_fpkm %>%
full_join(protein_data,
by = "Sample_ID") %>%
rename(c(Locus = locus,
Gene_ID = genes_fpkm_with_protein_charact))
#Add pepper information to tidied dataset, rename cols to make working w data easier
trimmed_tidy <- final_tidy %>%
mutate(Sample_ID = str_sub(Sample_ID, 1, -5)) %>% #Shrinks sample name
mutate(Forward = str_detect(Sample_ID, "R1")) %>% #Logic output for direction
mutate(Direction = case_when(Forward == TRUE ~ "Forward",
Forward == FALSE ~ "Reverse")) %>%
select(-Forward) %>% #Removes logic col now that we have actual direction
mutate(Sample_ID = str_sub(Sample_ID,1, 5))
# Chunk 4: Bar Graph of Mapped Reads
trimmed_tidy %>%
filter(Direction == "Forward") %>% #Removes duplicate libraries
ggplot(aes(x = Sample_ID, y = Mapped_Reads, fill = Pepper_Name)) +
geom_col() + theme_bw() +
scale_fill_brewer(palette = "Accent") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) +
labs(x = "Sample ID",
y = "Mapped Reads",
fill = "Pepper Name",
title = "Mapped Reads per Sample")
# Chunk 5: Box Plot of FPKM values
trimmed_tidy %>%
select(Sample_ID, FPKM, Pepper_Name) %>%
mutate(Log2_Trans = log2(FPKM)) %>%
ggplot(aes(x=Sample_ID, y=Log2_Trans, fill = Pepper_Name, color = Pepper_Name)) +
geom_boxplot(alpha = 0.5) +
theme_bw() +
scale_fill_brewer(palette = "Dark2",
guide = "none") +
scale_color_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) +
labs(x = "Sample ID",
y = "FPKM",
fill = "Pepper Name",
title = "Log2 Transformartion of FPKM per Sample")
# Chunk 6: PCA of Pepper Samples
splom_names <- c("HabP1_R1", "HabP1_R2", "JalP1_R1", "JalP1_R2", "SerP1_R1", "SerP1_R2", "WaxP1_R1", "WaxP1_R2", "CheP1_R1", "CheP1_R2", "CheP2_R1", "CheP2_R2", "CheS1_R1", "CheS1_R2", "CheS2_R1", "CheS2_R2", "GhoP1_R1", "GhoP1_R2", "GhoS1_R1", "GhoS1_R2", "HabP2_R1", "HabP2_R2", "HabS1_R1", "HabS1_R2", "HabS2_R1", "HabS2_R2", "JalS1_R1", "JalS1_R2", "CayP2_R1", "CayP2_R2", "CayP3_R1", "CayP3_R2", "CayS1_R1", "CayS1_R2", "CayS3_R1", "CayS3_R2", "SerP2_R1", "SerP2_R2", "SerS1_R1", "SerS1_R2", "SerS2_R1", "SerS2_R2", "WaxP2_R1", "WaxP2_R2", "WaxS1_R1", "WaxS1_R2", "WaxS2_R1", "WaxS2_R2")
splom_data %>%
select(-c(1:3)) %>%
scale() %>%
prcomp() -> pepper_pca
head(pepper_pca$rotation)
as_tibble(pepper_pca$rotation) %>%
mutate(Sample = splom_names) %>%
mutate(Tissue = ifelse(str_detect(Sample, "P"), "Placenta", "Skin")) %>%
mutate(Direction = ifelse(str_detect(Sample, "R1"), "Forward", "Reverse")) %>%
ggplot(aes(x = PC1, y = PC2, color = Tissue)) +
geom_point() + theme_bw()
as_tibble(pepper_pca$rotation) %>%
mutate(Sample = splom_names) %>%
mutate(Tissue = ifelse(str_detect(Sample, "P"), "Placenta", "Skin")) %>%
mutate(Direction = ifelse(str_detect(Sample, "R1"), "Forward", "Reverse")) %>%
ggplot(aes(x = PC1, y = PC3, color = Tissue)) +
geom_point() + theme_bw()
as_tibble(pepper_pca$rotation) %>%
mutate(Sample = splom_names) %>%
mutate(Tissue = ifelse(str_detect(Sample, "P"), "Placenta", "Skin")) %>%
mutate(Direction = ifelse(str_detect(Sample, "R1"), "Forward", "Reverse")) %>%
ggplot(aes(x = PC2, y = PC3, color = Direction)) +
geom_point() + theme_bw()
var_explained = pepper_pca$sdev^2 / sum(pepper_pca$sdev^2)
qplot(c(1:48), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
# Chunk 7: Scatterplot of FPKM values
log2_splom_data <- log2(splom_data[c(4:51)])
Che_scatter <- splom(log2_splom_data[c(9,10,11,12,13,14,15,16)],
par.settings = simpleTheme(col="darkseagreen4"),
pch = 20)
Hab_scatter <- splom(log2_splom_data[c(1,2,21,22,23,24,25,26)],
par.settings = simpleTheme(col="goldenrod1"),
pch = 20)
Jal_scatter <- splom(log2_splom_data[c(3,4,27,28)],
par.settings = simpleTheme(col="cyan4"),
pch = 20)
Ser_scatter <- splom(log2_splom_data[c(5,6,37,38,39,40,41,42)],
par.settings = simpleTheme(col="magenta4"),
pch = 20)
Gho_scatter <- splom(log2_splom_data[c(17,18,19,20)],
par.settings = simpleTheme(col="sienna"),
pch = 20)
Wax_scatter <- splom(log2_splom_data[c(7,8,43,44,45,46,47,48)],
par.settings = simpleTheme(col="deeppink4"),
pch = 20)
Cay_scatter <- splom(log2_splom_data[c(29,30,31,32,33,34,35,36)],
par.settings = simpleTheme(col="burlywood4"),
pch = 20)
Che_scatter
# Chunk 8: HeatMap of FPKM values
#Creating a heatmap to show the top highly expressed genes utilizing their FPKM values
# Chunk 9: Corrplot
log2_splom_data <- log2(splom_mod[c(4:51)])
ryan_pal <- colorRampPalette(c("#7FD1B9", "#AAE5D3", "#CEF0E6", "#E7F6F7"))
ryan_pal2 <- colorRampPalette(c("#E7F6F7", "#CEF0E6", "#AAE5D3", "#7FD1B9"))
ryan_pal3 <- colorRampPalette(c( "#84dcc6","#d6edff","#acd7ec","#8b95c9","#478978"))
log2_splom_data %>%
select(-c(1:3)) %>%
cor() %>%
corrplot(order = "hclust",
method = "square",
addrect = 8,
rect.col = "magenta4",
tl.cex =.75,
cl.ratio = 0.1,
cl.cex = 1,
tl.col = "black",
tl.srt = 90,
bg = "white",
cl.lim = c(0,1),
is.corr = F,
col = ryan_pal3(6))
head(pepper_pca$rotation)
summary(pepper_pca$rotation)
glimpse(pepper_pca$rotation)
qplot(c(1:48), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1) +
theme_bw()
var_explained
ggplot(var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1) +
theme_bw()
?qplot
log2_splom_data <- log2(splom_mod[c(4:51)])
ryan_pal <- colorRampPalette(c("#7FD1B9", "#AAE5D3", "#CEF0E6", "#E7F6F7"))
ryan_pal2 <- colorRampPalette(c("#E7F6F7", "#CEF0E6", "#AAE5D3", "#7FD1B9"))
ryan_pal3 <- colorRampPalette(c( "#84dcc6","#d6edff","#acd7ec","#8b95c9","#478978"))
log2_splom_data %>%
select(-c(1:3)) %>%
cor() %>%
corrplot(order = "hclust",
method = "square",
addrect = 8,
rect.col = "magenta4",
tl.cex =.75,
cl.ratio = 0.1,
cl.cex = 1,
tl.col = "black",
tl.srt = 90,
bg = "white",
cl.lim = c(0,1),
is.corr = F,
col = ryan_pal3(6))
log2_splom_data %>%
select(-c(1:3)) %>%
cor() %>%
corrplot(order = "hclust", #Specifies how we arrange data
method = "square", #Presentation of clusters
addrect = 8, #Distinguishes groups among clusters
rect.col = "magenta4", #Color of groups
tl.cex = 1,
cl.ratio = 0.1,
cl.cex = 1,
tl.col = "black",
tl.srt = 90,
bg = "white",
cl.lim = c(0,1),
is.corr = F,
col = ryan_pal3(6))
log2_splom_data %>%
select(-c(1:3)) %>%
cor() %>%
corrplot(order = "hclust", #Specifies how we arrange data
method = "square", #Presentation of clusters
addrect = 8, #Distinguishes groups among clusters
rect.col = "magenta4", #Color of groups
tl.cex = 0.75, #Label size
cl.ratio = 0.1,
cl.cex = 1,
tl.col = "black",
tl.srt = 90,
bg = "white",
cl.lim = c(0,1),
is.corr = F,
col = ryan_pal3(6))
log2_splom_data %>%
select(-c(1:3)) %>%
cor() %>%
corrplot(order = "hclust", #Specifies how we arrange data
method = "square", #Presentation of clusters
addrect = 8, #Distinguishes groups among clusters
rect.col = "magenta4", #Color of groups
tl.cex = 0.75, #Label size
cl.ratio = 1,
cl.cex = 1,
tl.col = "black",
tl.srt = 90,
bg = "white",
cl.lim = c(0,1),
is.corr = F,
col = ryan_pal3(6))
0.1
log2_splom_data %>%
select(-c(1:3)) %>%
cor() %>%
corrplot(order = "hclust", #Specifies how we arrange data
method = "square", #Presentation of clusters
addrect = 8, #Distinguishes groups among clusters
rect.col = "magenta4", #Color of groups
tl.cex = 0.75, #Label size
cl.ratio = 0.1, #Scale size
cl.cex = 1, #Scale number size
tl.col = "black", #Lable colors
tl.srt = 90,
bg = "white",
cl.lim = c(0,1),
is.corr = F,
col = ryan_pal3(6))
log2_splom_data %>%
select(-c(1:3)) %>%
cor() %>%
corrplot(order = "hclust", #Specifies how we arrange data
method = "square", #Presentation of clusters
addrect = 8, #Distinguishes groups among clusters
rect.col = "magenta4", #Color of groups
tl.cex = 0.75, #Label size
cl.ratio = 0.1, #Scale size
cl.cex = 1, #Scale number size
tl.col = "black", #Label colors
tl.srt = 45,
bg = "white",
cl.lim = c(0,1),
is.corr = F,
col = ryan_pal3(6))
